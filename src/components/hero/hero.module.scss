$imgSize: min(300px, 90%);

@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.hero {
  margin-top: var(--space-xxl);
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-xxl);

  @media (min-width: 800px) {
    flex-direction: row;
    justify-content: center;
  }

  img {
    width: 300px;
    height: 300px;
  }
}

.textContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: var(--space-lg);

  font-size: var(--font-xxl);
  text-align: center;

  @media (min-width: 800px) {
    align-items: start;
    text-align: left;
  }

  span {
    color: var(--red);
  }

  p,
  .buttonsContainer {
    opacity: 0; /* Start with the text invisible */
    animation-name: fadeIn;
    animation-duration: 1s; /* Duration of the fade-in effect */
    animation-fill-mode: forwards; /* Keeps the text visible after the animation completes */
  }

  & > :nth-child(2) {
    animation-delay: 2s; /* Delay before the animation starts */
  }

  & > :nth-child(3),
  & > :nth-child(4) {
    animation-delay: 3.2s; /* Delay before the animation starts */
  }
}

.buttonsContainer {
  margin-top: var(--space-xs); // compensate for text line-height

  display: flex;
  flex-wrap: wrap;
  gap: var(--space-lg);

  // expand both buttons to the same size
  & > * {
    flex: 1;
  }
}

.circle {
  width: $imgSize; /* Width of the circle */
  //   height: $imgSize; /* Height of the circle */
  border-radius: 50%; /* Makes the edges fully rounded */
  overflow: hidden;
}
