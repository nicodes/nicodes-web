$initialAnimationDelay: 0.5s;
$animationTime: 0.05s;

@keyframes drawText {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

.nav {
  max-width: var(--content-max-width-lg);
  margin: 0 auto;
  padding: var(--thick);
  border-bottom: 3px solid var(--red);

  display: flex;
  align-items: center;
  gap: var(--thick);

  & > :first-child {
    margin-right: auto;
  }

  a {
    cursor: pointer;
    color: var(--white);
    text-decoration: none;
    font-weight: bold;
  }

  // exclude last link using button component, so underlines don't conflict
  a:hover:not(:last-child) {
    text-decoration: underline; /* Adds underline on hover */
    text-decoration-color: var(--red); /* Makes the underline red */
    text-underline-offset: 5px; /* Adjusts the spacing between text and underline */
  }

  // hide nav links on mobile
  @media screen and (max-width: 800px) {
    & > :not(:first-child):not(:last-child) {
      display: none;
    }
  }

  span {
    opacity: 0;
    animation: drawText $animationTime forwards;

    // n
    &:first-child {
      animation-delay: $initialAnimationDelay;
    }

    // i
    &:nth-child(2) {
      animation-delay: $initialAnimationDelay + $animationTime;

      // custom dot on 'i'
      position: relative;
      &::before {
        content: ".";
        position: absolute;
        top: 0;
        left: 50%;
        transform: translate(-54%, -47%);
        color: var(--red);
      }
    }

    // c
    &:nth-child(3) {
      animation-delay: $initialAnimationDelay + ($animationTime * 2);
    }

    // o
    &:nth-child(4) {
      animation-delay: $initialAnimationDelay + ($animationTime * 3);
    }

    // d
    &:nth-child(5) {
      animation-delay: $initialAnimationDelay + ($animationTime * 4);
    }

    // e
    &:nth-child(6) {
      animation-delay: $initialAnimationDelay + ($animationTime * 5);
    }

    // s
    &:last-child {
      animation-delay: $initialAnimationDelay + ($animationTime * 6);
    }
  }
}
